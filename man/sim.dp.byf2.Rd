% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.dp.byf2.R
\name{sim.dp.byf2}
\alias{sim.dp.byf2}
\title{Simulate Dissolution Profiles by f2 Values}
\usage{
sim.dp.byf2(tp, dp, sim.dp.out, target.f2, seed = NULL,
            regulation = c("EMA", "FDA", "WHO"),
            model = c("Weibull", "first-order"), digits = 2L,
            min.points = 3L, both.TR.85 = FALSE, max.disso = 105,
            model.par.cv = 50, fix.fmax.cv = 0, random.factor = 3,
            sim.target = c("ref.pop", "ref.median", "ref.mean"),
            time.unit = c("min", "h"), message = TRUE, plot = TRUE)
}
\arguments{
\item{tp, dp}{Numeric vector of time points \code{tp} and their corresponding
mean dissolution profiles \code{dp}.}

\item{sim.dp.out}{Output of function \code{sim.dp}. If this parameter is
supplied by users, then \code{tp/dp} will be ignored if they are provided.}

\item{target.f2}{Numeric value of target f2. It can be a single value, or a
vector of two values representing lower and upper limit of target f2 value.
See Details.}

\item{seed}{Numeric seed value for reproducibility. If missing, a random
seed will be generated for reproducibility purpose.}

\item{regulation}{Character strings indicating regulatory guidelines.
@seealso \code{\link[=calcf2]{calcf2()}}.}

\item{model}{Strings of model names. Currently only 'Weibull' and
'first-order' models are supported.}

\item{digits}{An integer indicating the decimal points for the output.}

\item{min.points}{An integer indicating the minimum time points to be used
to calculate f2. The default is 3 for conventional f2 calculation.
This parameter is mainly used for bootstrap f2 method. @seealso \code{\link[=calcf2]{calcf2()}}.}

\item{both.TR.85}{A logic value indicating if the old (incorrect)
interpretation (that both the test and reference should release more than
85\%) should be used for f2 calculation when \code{regulation = 'FDA'}.
@seealso \code{\link[=calcf2]{calcf2()}}.}

\item{max.disso}{Numeric value for the maximum possible dissolution.
In theory, the maximum dissolution should be 100\%, but in practice,
it is not uncommon to see higher values, such as 105\%, or even 110\%.}

\item{model.par.cv, fix.fmax.cv}{Numeric value expressed as percentage.
Used for random generation of model parameters and fmax when optimization
algorithm is not used, i.e., when \code{target.f2} is a vector of two
numbers. See Details.}

\item{random.factor}{Numeric value used for random generation of model
parameters when optimization algorithm is used, i.e., when \code{target.f2}
is a single number. See Details.}

\item{sim.target}{Character strings indicating to which target should the
newly simulated be used to calculate f2. Only applicable when
\code{sim.dp.out} is not missing.}

\item{time.unit}{Character strings indicating the unit of time. It should
be either \code{"min"} for minute or \code{"h"} for hour. It is mainly
used for checking CV rules and making plot. @seealso \code{\link[=calcf2]{calcf2()}}.}

\item{message}{Logic value. If \code{TRUE}, basic information of the
simulation will be printed on screen.}

\item{plot}{A logic value indicating if the dissolution versus time plot
should be printed.}
}
\value{
A list of 2 components: a data frame of model parameters and a data
frame of mean dissolution generated using the said model parameters.
The output can be passed to function \code{sim.dp()} to simulate multiple
individual profiles.
}
\description{
Given any mean dissolution profile \code{dp}, this function will simulate a
mean dissolution profile such that when the newly simulated profile is
compared to \code{dp}, the calculated f2 will be equal to the predefined
target f2 value (within certain numeric precision).
}
\details{
The main principle of the function is as follows:
\enumerate{
\item For any given mean dissolution profile, fit a suitable mathematical
model and obtain model parameters.
\itemize{
\item No precise fitting is required since those parameters will be
served as initial value for further model fitting.
\item If the output of the function \code{sim.dp()} is available, no
initial fitting is necessary as model parameters can be read directly
from the output, unless multivariate normal distribution approach
is used. In such case, initial model fitting will be done.
}
\item Find a suitable model parameters and simulate a new data set, comparing
the new data to the provided reference data by calculating f2. If the
f2 is equal to the \code{target.f2}, or within the lower and upper
limit of the \code{target.f2} (see below), then output the obtained
model parameters. There are two approaches used to find the suitable
model parameters:
\itemize{
\item If \code{target.f2} is a single value, optimization algorithm
will be used and the simulated dissolution profile will have f2
equal to \code{target.f2} when compared to \code{dp} (within
numeric precision defined by the tolerance).
\item If \code{target.f2} is vector of two numbers representing the
lower and upper limit of target f2 value, such as \code{target.f2 =
        c(lower, upper)}, then dissolution will be obtained by random
searching and the calculated f2 will be within the range of lower
and upper. For example, set \code{target.f2 = c(54.95, 55.04)} to
have target f2 of 55. Since f2 should be normally reported without
decimal, in practice, the precision is enough. You might be able to
do with \code{c(54.99, 55.01)} if you really need more precision.
However, the narrower the range, the longer time it takes to run.
With narrow range such as \code{c(54.999, 55.001)}, it is likely the
program will hang up. In such case, provide single value to use
optimization algorithm.
}
}

Arguments \code{model.par.cv}, \code{fix.fmax.cv}, and \code{random.factor}
are certain numeric values used to better control the random generation of
model parameters. The default values should work in most scenarios. Those
values should be changed only when the function failed to return any value.
A vignette will be produced later to give more details.
}
\examples{
tp <- c(5, 10, 15, 20, 30, 45, 60)

mod.par.r <- list(fmax = 100, fmax.cv = 2, tlag = 0, tlag.cv = 0,
                  mdt = 25, mdt.cv = 4, beta = 2.1, beta.cv = 3)

d.r <- sim.dp(tp, model.par = mod.par.r, seed = 100, n.units = 120L,
              plot = FALSE)

model.par1 <- sim.dp.byf2(sim.dp.out = d.r, target.f2 = 60, seed = 123)
model.par2 <- sim.dp.byf2(sim.dp.out = d.r, target.f2 = c(59.95, 60.04),
                          seed = 123)
model.par3 <- sim.dp.byf2(tp = d.r$sim.summary$time,
                          dp = d.r$sim.summary$dp,
                          target.f2 = c(59.99, 60.01), seed = 123)

}
